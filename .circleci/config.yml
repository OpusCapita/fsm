defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u131-nodejs-8.9.4-maven-3.3.9
  working_directory: ~/build

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: save-cache-checksum
          command: find -name "package.json" | xargs cat > /tmp/cache-checksum

      - restore_cache:
          keys:
            - dependencies-{{ checksum "/tmp/cache-checksum" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-

      - run:
          name: bootstrap (install dependencies)
          command: npm install

      - save_cache:
          key: dependencies-{{ checksum "/tmp/cache-checksum" }}
          paths:
            - ./package-lock.json
            - ./node_modules
            - ./packages/core/package-lock.json
            - ./packages/core/node_modules
            - ./packages/editor/package-lock.json
            - ./packages/editor/node_modules
            - ./packages/history/package-lock.json
            - ./packages/history/node_modules
            - ./packages/task-manager/package-lock.json
            - ./packages/task-manager/node_modules
            - ./packages/examples/invoice-console/package-lock.json
            - ./packages/examples/invoice-console/node_modules
            - ./packages/examples/process-task-manager-ui/package-lock.json
            - ./packages/examples/process-task-manager-ui/node_modules

      - run:
          name: lint
          command: npm run lint

      - run:
          name: test
          command: npm test

      - run:
          name: build-and-deploy-gh-pages
          command: |
            cd packages/editor
            bash ./scripts/gh-pages/build.sh
            bash ./scripts/gh-pages/deploy.sh .gh-pages-tmp

      - store_artifacts:
          path: ./packages/core/test-results.xml
          prefix: core

      - store_artifacts:
          path: ./packages/editor/test-results.xml
          prefix: editor

      - store_artifacts:
          path: ./packages/task-manager/test-results.xml
          prefix: task-manager

      - store_artifacts:
          path: ./packages/history/test-results.xml
          prefix: history

      - store_test_results:
          path: ./junit

  # deploy-editor-to-github-pages:
  #   docker:
  #     - image: circleci/node:6
  #   working_directory: ~/repo/packages/editor
  #   steps:
  #     - checkout:
  #         path: ~/repo
  #     - run:
  #         name: save-cache-checksum
  #         command: find -name "package.json" | xargs cat > /tmp/cache-checksum
  #
  #     - restore_cache:
  #         keys:
  #           - v1-dependencies-{{ checksum "/tmp/cache-checksum" }}
  #           # fallback to using the latest cache if no exact match is found
  #           - v1-dependencies-
  #     - run:
  #         name: install-dependencies
  #         command: npm install
  #
  #     - save_cache:
  #         key: v1-dependencies-{{ checksum "/tmp/cache-checksum" }}
  #         paths:
  #           - ./package-lock.json
  #           - ./node_modules
  #           - ./packages/core/package-lock.json
  #           - ./packages/core/node_modules
  #           - ./packages/editor/package-lock.json
  #           - ./packages/editor/node_modules
  #           - ./packages/history/package-lock.json
  #           - ./packages/history/node_modules
  #           - ./packages/task-manager/package-lock.json
  #           - ./packages/task-manager/node_modules
  #           - ./packages/examples/invoice-console/package-lock.json
  #           - ./packages/examples/invoice-console/node_modules
  #           - ./packages/examples/process-task-manager-ui/package-lock.json
  #           - ./packages/examples/process-task-manager-ui/node_modules
  #
  #     - run:
  #         name: build-gh-pages
  #         command: bash ./scripts/gh-pages/build.sh
  #     - run:
  #         name: deploy-gh-pages
  #         command: bash ./scripts/gh-pages/deploy.sh .gh-pages-tmp

  build_release:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh

      - checkout
      - run:
          name: save-cache-checksum
          command: find -name "package.json" | xargs cat > /tmp/cache-checksum

      - restore_cache:
          keys:
            - dependencies-{{ checksum "/tmp/cache-checksum" }}
            - dependencies-

      - run:
          name: bootstrap (install dependencies)
          command: npm install

      - save_cache:
          key: dependencies-{{ checksum "/tmp/cache-checksum" }}
          paths:
            - ./package-lock.json
            - ./node_modules
            - ./packages/core/package-lock.json
            - ./packages/core/node_modules
            - ./packages/editor/package-lock.json
            - ./packages/editor/node_modules
            - ./packages/history/package-lock.json
            - ./packages/history/node_modules
            - ./packages/task-manager/package-lock.json
            - ./packages/task-manager/node_modules
            - ./packages/examples/invoice-console/package-lock.json
            - ./packages/examples/invoice-console/node_modules
            - ./packages/examples/process-task-manager-ui/package-lock.json
            - ./packages/examples/process-task-manager-ui/node_modules

      - run:
          name: lint
          command: npm run lint

      - run:
          name: test
          command: npm test

      - run:
          name: build-and-deploy-gh-pages
          command: |
            cd packages/editor
            bash ./scripts/gh-pages/build.sh
            bash ./scripts/gh-pages/deploy.sh .gh-pages-tmp

      - store_artifacts:
          path: ./packages/core/test-results.xml
          prefix: core

      - store_artifacts:
          path: ./packages/editor/test-results.xml
          prefix: editor

      - store_artifacts:
          path: ./packages/task-manager/test-results.xml
          prefix: task-manager

      - store_artifacts:
          path: ./packages/history/test-results.xml
          prefix: history

      - store_test_results:
          path: ./junit

      - run:
          name: "Publish release."
          command: npm run publish-release

  release:
    <<: *defaults
    steps:

      - run:
          name: Environment inject
          command: env_inject.sh

      - checkout

      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh

workflows:
  version: 2
  release-and-build-all:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
                - release
      # - deploy-editor-to-github-pages:
      #     filters:
      #       branches:
      #         ignore:
      #           - gh-pages
      - release:
          filters:
            branches:
              only: release
      - build_release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
