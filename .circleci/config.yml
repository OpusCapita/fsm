version: 2.1

orbs:
  kubernetes: opuscapita/kubernetes@volatile
  git: opuscapita/git@volatile

aliases:
  - &inject-environment
    name: Inject environment
    command: /bin/env_inject.sh

  - &save-cache-checksum
    name: Save cache checksum
    command: find . -name "package.json" | sort | xargs cat >> /tmp/cache-checksum

  - &restore-cache
    keys:
      - dependencies-{{ checksum "/tmp/cache-checksum" }}

  - &save-cache
    key: dependencies-{{ checksum "/tmp/cache-checksum" }}
    paths:
      - ./package-lock.json
      - ./node_modules
      - ./packages/core/package-lock.json
      - ./packages/core/node_modules
      - ./packages/editor/package-lock.json
      - ./packages/editor/node_modules
      - ./packages/history/package-lock.json
      - ./packages/history/node_modules
      - ./packages/task-manager/package-lock.json
      - ./packages/task-manager/node_modules
      - ./packages/examples/invoice-console/package-lock.json
      - ./packages/examples/invoice-console/node_modules
      - ./packages/examples/process-task-manager-ui/package-lock.json
      - ./packages/examples/process-task-manager-ui/node_modules
      - ./packages/examples/complete-demo/package-lock.json
      - ./packages/examples/complete-demo/node_modules

  - &install-dependencies
    name: Install dependencies
    # we use --unsafe-perm as current build using root user which fails
    command: npm install --unsafe-perm

defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u131-nodejs-8.9.4-maven-3.3.9
  working_directory: ~/build

jobs:
  build:
    <<: *defaults
    steps:
      - run: *inject-environment
      - git/checkout-with-submodules
      - run: *save-cache-checksum
      - restore_cache: *restore-cache
      - run: *install-dependencies
      - save_cache: *save-cache
      - run:
          name: Lint sources
          command: npm run lint
      - run:
          name: Run tests
          command: npm test
      - store_artifacts:
          path: ./test-results
      - store_test_results:
          path: ./test-results
      - run:
          name: Publish to npm
          command: |
            if [ ! -z "${CIRCLE_TAG}" ]; then
              npm run publish
            else
              echo "This step is skipped as this is not a release build"
            fi

      # This step checkouts gh-pages branch, therefor it should be the last step or clean up properly
      - run:
          name: Build and deploy gh-pages
          command: |
            cd packages/editor
            ./scripts/gh-pages/build.sh
            ./scripts/gh-pages/deploy.sh .gh-pages-tmp

  build-docker-image:
    <<: *defaults
    steps:
      - run: *inject-environment
      - checkout
      - setup_remote_docker
      - run:
          name: Build applcation Docker image and push it into Docker repository
          command: .docker/build-and-push.sh

workflows:
  version: 2
  build-and-deploy-to-cloud:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build-docker-image:
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
      - kubernetes/deploy-demo:
          requires:
            - build-docker-image
          filters:
            tags:
              ignore: /.*/
